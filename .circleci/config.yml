version: 2.1

orbs:
  maven: circleci/maven@0.0.4
executors:
  my-executor:
    docker:
    - image: 'circleci/openjdk:8u171'

commands:
  prepare-env:
    description: "Prepare environment variables"
    steps:
    - run:
        name: Install hub CLI client
        environment:
          HUB_VERSION: 2.7.0
          HUB_FOLDER: hub-linux-amd64-2.7.0
        command: |
          wget https://github.com/github/hub/releases/download/v${HUB_VERSION}/${HUB_FOLDER}.tgz
          tar -xzf ${HUB_FOLDER}.tgz
          echo "export PATH=$PATH:~/${HUB_FOLDER}/bin" >> $BASH_ENV
          echo "alias git=hub" >> $BASH_ENV
    - run:
        name: Get Pull Request ID
        # Add `-u $GITHUB_ACCESS_TOKEN:x-oauth-basic` if private repo
        # get PR number from GITHUB hub: git pr list --format=%I --head=feature/circle-ci
        command: |
          if [[ -z "$CIRCLE_PR_NUMBER" ]]; then
              if [[ -z "$CIRCLE_PULL_REQUEST" ]]; then
                  URL="https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls?head=$CIRCLE_PROJECT_USERNAME:$CIRCLE_BRANCH"
                  RESULT="`curl -X GET $URL | jq ".[0].url"`"
                  [[ "$RESULT" == 'null' ]] && CIRCLE_PULL_REQUEST='' || CIRCLE_PULL_REQUEST="${RESULT//\"}"
              fi
              CIRCLE_PR_NUMBER="$(basename "$CIRCLE_PULL_REQUEST")"
          fi
          echo "export CIRCLE_PR_NUMBER=$CIRCLE_PR_NUMBER" >> $BASH_ENV
    - run:
        name: Get pull request base branch
        command:
          PR_BRANCH_TARGET="`git pr list --format=%B --head=${CIRCLE_BRANCH}`"
          echo "export PR_BRANCH_TARGET=$PR_BRANCH_TARGET" >> $BASH_ENV


jobs:
  static-analysis-pr:
    docker:
    - image: 'circleci/openjdk:8u171'
    steps:
    - checkout
    - prepare-env
    - maven/with_cache:
        steps:
        - run: mvn clean install -Dmaven.test.skip=true
        - run:
            # TODO cache sonar plugin separately
            name: Run sonar-scanner
            command: |
              echo 'export PATH=$PATH:~/project/sonar-scanner-3.2.0.1227-linux/bin' >> $BASH_ENV
              source $BASH_ENV
              mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.5.0.1254:sonar \
                -Dsonar.projectKey=blibli-future_command-plugin \
                -Dsonar.organization=blibli-future \
                -Dsonar.login=${SONARCLOUD_TOKEN} \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.pullrequest.branch=${CIRCLE_BRANCH} \
                -Dsonar.pullrequest.key=${CIRCLE_PR_NUMBER} \
                -Dsonar.pullrequest.base=master \
                -Dsonar.pullrequest.provider=github \
                -Dsonar.pullrequest.github.repository=${CIRCLE_PR_REPONAME}

  static-analysis-long-live-branches:
    docker:
    - image: 'circleci/openjdk:8u171'
    steps:
    - checkout
    - prepare-env
    - maven/with_cache:
        steps:
        - run: mvn clean install
        - run:
            name: Run sonar scanner
            command: |
              source $BASH_ENV
              mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.5.0.1254:sonar \
                -Dsonar.projectKey=blibli-future_command-plugin \
                -Dsonar.organization=blibli-future \
                -Dsonar.login=${SONARCLOUD_TOKEN} \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.branch.name=${CIRCLE_BRANCH} \
                -Dsonar.branch.target=${PR_BRANCH_TARGET}


workflows:
  pull_request_check:
    jobs:
    # TODO download mvn dependency first, and make all jobs depend upon it.
    - maven/test:
        executor: my-executor
    - static-analysis-pr:
        context: DEVELOPMENT
        filters:
          branches:
            ignore:
              - master
              - release/*
    - static-analysis-long-live-branches:
        context: DEVELOPMENT
        filters:
          branches:
            only:
              - master
              - release/*
